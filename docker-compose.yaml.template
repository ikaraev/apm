version: '3.7'
services:
    nginx:
        build:
            dockerfile: nginx.Dockerfile
            context: docker/nginx
        restart: unless-stopped
        container_name: nginx
        ports:
            - "${NGINX_80}:80"
        volumes:
            - ./source:/var/www/html
            - ./docker/nginx/conf.d:/etc/nginx/conf.d
            - ./docker/nginx/magento-cors.conf:/etc/nginx/magento-cors.conf
        depends_on:
          - php
          - elasticsearch-apm
        networks:
            - network

    php:
        container_name: php
        build:
            dockerfile: php82.Dockerfile
            context: docker/php
        environment:
            PHP_IDE_CONFIG: "serverName=DockerApm"
#            XDEBUG_CONFIG: "remote_host=${REMOTE_HOST}"
#            XDEBUG_CONFIG: remote_host=192.168.16.105
        volumes:
          - "./source:/var/www/html"
          - ./docker/php/php82.ini:/usr/local/etc/php/conf.d/php.ini
          - ~/.ssh:/root/.ssh
        depends_on:
            - mysql
        networks:
            - network

    opensearch:
        build:
            context: docker/opensearch
        ports:
            - "${OPEN_SEARCH_9200}:9200"
            - "${OPEN_SEARCH_9300}:9300"
        environment:
            # OPENSEARCH_HOST: "${OPENSEARCH_HOST}"
            # OPENSEARCH_PORT: "${OPENSEARCH_PORT_9200}"
            OPENSEARCH_HEALTHCHECK_TIMEOUT: "${OPENSEARCH_HEALTHCHECK_TIMEOUT}"
          ## Set custom heap size to avoid memory errors
            OPENSEARCH_JAVA_OPTS: "-Xms1g -Xmx1g"
          # Prevent security patch conflicts with core M2 code
            DISABLE_SECURITY_PLUGIN: "true"
            discovery.type: "single-node"
            ## Avoid test failures due to small disks
            ## More info at https://github.com/markshust/docker-magento/issues/488
            cluster.routing.allocation.disk.threshold_enabled: "false"
        networks:
            - network

    mysql:
        container_name: mysql
        image: mysql:8.0.0
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
        command:
            - "mysqld"
            - "--local_infile=true"
        ports:
            - "${MYSQL_3306}:3306"
        networks:
            - network
# you can use 3306 instead of 3310 if there is no mysql server on your local machine

    phpmyadmin-apm:
        container_name: phpmyadmin-apm
        image: phpmyadmin/phpmyadmin:5.0.1
        restart: unless-stopped
        environment:
            PMA_HOST: mysql
            PMA_USER: "${PMA_USER}"
            PMA_PASSWORD: "${PMA_PASSWORD}"
            UPLOAD_LIMIT: 50M
            # import max file size
#            PMA_PORT: 3306 is not necessary to set
        ports:
            - "${PMA_PORT}:80"
        depends_on:
            - mysql
        networks:
            - network

    redis:
        image: redis:6.2
        restart: "unless-stopped"
        environment:
            - ALLOW_EMPTY_PASSWORD=yes
        networks:
            - network

    mailcatcher:
        image: sj26/mailcatcher
        ports:
            - "1080:1080"
        networks:
            - network

networks:
    network:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 172.25.98.1/28
